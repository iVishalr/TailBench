This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by THIS_IS_SHORE_KITS configure 2.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure --enable-shore6 --enable-dbgsymbols SHORE_HOME=../shore-mt/

## --------- ##
## Platform. ##
## --------- ##

hostname = ubuntu
uname -m = x86_64
uname -r = 5.4.0-42-generic
uname -s = Linux
uname -v = #46~18.04.1-Ubuntu SMP Fri Jul 10 07:21:24 UTC 2020

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games
PATH: /snap/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1932: checking build system type
configure:1946: result: x86_64-pc-linux-gnu
configure:1966: checking host system type
configure:1979: result: x86_64-pc-linux-gnu
configure:1999: checking target system type
configure:2012: result: x86_64-pc-linux-gnu
configure:2055: checking for a BSD-compatible install
configure:2123: result: /usr/bin/install -c
configure:2134: checking whether build environment is sane
configure:2189: result: yes
configure:2340: checking for a thread-safe mkdir -p
configure:2379: result: /bin/mkdir -p
configure:2386: checking for gawk
configure:2416: result: no
configure:2386: checking for mawk
configure:2402: found /usr/bin/mawk
configure:2413: result: mawk
configure:2424: checking whether make sets $(MAKE)
configure:2446: result: yes
configure:2475: checking whether make supports nested variables
configure:2492: result: yes
configure:2678: checking for g++
configure:2694: found /usr/bin/g++
configure:2705: result: g++
configure:2732: checking for C++ compiler version
configure:2741: g++ --version >&5
g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Copyright (C) 2017 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:2752: $? = 0
configure:2741: g++ -v >&5
Using built-in specs.
COLLECT_GCC=g++
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.5.0-3ubuntu1~18.04' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04) 
configure:2752: $? = 0
configure:2741: g++ -V >&5
g++: error: unrecognized command line option '-V'
g++: fatal error: no input files
compilation terminated.
configure:2752: $? = 1
configure:2741: g++ -qversion >&5
g++: error: unrecognized command line option '-qversion'; did you mean '--version'?
g++: fatal error: no input files
compilation terminated.
configure:2752: $? = 1
configure:2772: checking whether the C++ compiler works
configure:2794: g++ -std=c++98 -g   conftest.cpp  >&5
configure:2798: $? = 0
configure:2846: result: yes
configure:2849: checking for C++ compiler default output file name
configure:2851: result: a.out
configure:2857: checking for suffix of executables
configure:2864: g++ -o conftest -std=c++98 -g   conftest.cpp  >&5
configure:2868: $? = 0
configure:2890: result: 
configure:2912: checking whether we are cross compiling
configure:2920: g++ -o conftest -std=c++98 -g   conftest.cpp  >&5
configure:2924: $? = 0
configure:2931: ./conftest
configure:2935: $? = 0
configure:2950: result: no
configure:2955: checking for suffix of object files
configure:2977: g++ -c -std=c++98 -g  conftest.cpp >&5
configure:2981: $? = 0
configure:3002: result: o
configure:3006: checking whether we are using the GNU C++ compiler
configure:3025: g++ -c -std=c++98 -g  conftest.cpp >&5
configure:3025: $? = 0
configure:3034: result: yes
configure:3043: checking whether g++ accepts -g
configure:3063: g++ -c -g  conftest.cpp >&5
configure:3063: $? = 0
configure:3104: result: yes
configure:3138: checking for style of include used by make
configure:3166: result: GNU
configure:3192: checking dependency style of g++
configure:3303: result: gcc3
configure:3361: checking for ranlib
configure:3377: found /usr/bin/ranlib
configure:3388: result: ranlib
configure:3411: Configuring Shore Kits
configure:3421: checking for grep that handles long lines and -e
configure:3479: result: /bin/grep
configure:3484: checking for egrep
configure:3546: result: /bin/grep -E
configure:3571: checking CXX
configure:3573: result: g++
configure:3619: checking compiler version
configure:3628: result: 7.5.0
configure:3649: checking Readline location
configure:3661: result: /usr
configure:3674: checking Shore directory
configure:3693: result: ../shore-mt/
configure:3703: checking Home directory
configure:3706: result: /home/vishalr/Desktop/Tailbench/tailbench/shore/shore-kits
configure:3761: result: configuring for linux/x86_64
configure:3865: checking whether will compile for debugging
configure:3887: result: no
configure:3894: checking whether will compile for profiling
configure:3916: result: no
configure:3924: checking whether will use debug symbols
configure:3940: result: yes
configure:3960: Creating output directory obj/x86_64_LINUX
configure:4004: checking whether using Shore-MT or Shore-SM-6.X.X
configure:4028: result: yes
configure:4031: WARNING: Using Shore-SM-6.X.X
configure:4048: checking whether to enable Dora
configure:4080: result: no
configure:4088: checking whether to enable FLUSHER/GROUPCOMMIT option
configure:4127: result: no
configure:4134: checking whether to use caches
configure:4158: result: yes
configure:4173: checking whether to add the Simics magic instructions
configure:4205: result: no
configure:4212: checking whether to enable backtracing
configure:4244: result: no
configure:4252: checking whether to enable the hacks
configure:4284: result: no
configure:4291: checking whether to enable qpipe
configure:4323: result: no
configure:4330: checking whether to enable VTune
configure:4362: result: no
configure:4539: checking that generated files are newer than configure
configure:4545: result: done
configure:4612: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by THIS_IS_SHORE_KITS config.status 2.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on ubuntu

config.status:820: creating Makefile
config.status:992: executing depfiles commands

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-pc-linux-gnu
ac_cv_cxx_compiler_gnu=yes
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CXXFLAGS_set=set
ac_cv_env_CXXFLAGS_value='-std=c++98 -g'
ac_cv_env_CXX_set=
ac_cv_env_CXX_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_READLINE_HOME_set=
ac_cv_env_READLINE_HOME_value=
ac_cv_env_SHORE_HOME_set=set
ac_cv_env_SHORE_HOME_value=../shore-mt/
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_host=x86_64-pc-linux-gnu
ac_cv_objext=o
ac_cv_path_EGREP='/bin/grep -E'
ac_cv_path_GREP=/bin/grep
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_mkdir=/bin/mkdir
ac_cv_prog_AWK=mawk
ac_cv_prog_ac_ct_CXX=g++
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_cxx_g=yes
ac_cv_prog_make_make_set=yes
ac_cv_target=x86_64-pc-linux-gnu
am_cv_CXX_dependencies_compiler_type=gcc3
am_cv_make_support_nested_variables=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /home/vishalr/Desktop/Tailbench/tailbench/shore/shore-kits/missing aclocal-1.15'
ADD_OPT_CACHES_FALSE='#'
ADD_OPT_CACHES_TRUE=''
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='1'
AM_V='$(V)'
ARCHOS='x86_64_LINUX'
AUTOCONF='${SHELL} /home/vishalr/Desktop/Tailbench/tailbench/shore/shore-kits/missing autoconf'
AUTOHEADER='${SHELL} /home/vishalr/Desktop/Tailbench/tailbench/shore/shore-kits/missing autoheader'
AUTOMAKE='${SHELL} /home/vishalr/Desktop/Tailbench/tailbench/shore/shore-kits/missing automake-1.15'
AWK='mawk'
CPPFLAGS=''
CXX='g++'
CXXDEPMODE='depmode=gcc3'
CXXFLAGS=' -ggdb  -O3 -finline-limit=1200 -fomit-frame-pointer -mtune=core2 -march=core2 -Wall -Wcast-align -Wextra -Wfloat-equal -Wno-return-type 	 -Wno-invalid-offsetof -Wno-conversion -Wno-system-headers -D_REENTRANT -DARCH_LP64 -m64  -std=c++98 -g'
CYGPATH_W='echo'
DEFS='-DPACKAGE_NAME=\"THIS_IS_SHORE_KITS\" -DPACKAGE_TARNAME=\"this_is_shore_kits\" -DPACKAGE_VERSION=\"2.1\" -DPACKAGE_STRING=\"THIS_IS_SHORE_KITS\ 2.1\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"this_is_shore_kits\" -DVERSION=\"2.1\" -DCFG_SHORE_6=1 -DCFG_CACHES=1'
DEPDIR='.deps'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/bin/grep -E'
EXEEXT=''
GCC_COMPILER='g++'
GREP='/bin/grep'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
KITS_HOME='/home/vishalr/Desktop/Tailbench/tailbench/shore/shore-kits'
KITS_VERSION='shore-kits.2.1'
KITS_VERSION_MAJOR='shore-kits'
KITS_VERSION_MINOR='2'
KITS_VERSION_REV='1'
LDFLAGS='-lnsl -ldl -lm -lpthread -lrt -rdynamic -lncurses'
LIBOBJS=''
LIBS=''
LINUX_OS_FALSE='#'
LINUX_OS_TRUE=''
LTLIBOBJS=''
MAKEINFO='${SHELL} /home/vishalr/Desktop/Tailbench/tailbench/shore/shore-kits/missing makeinfo'
MKDIR_P='/bin/mkdir -p'
OBJEXT='o'
PACKAGE='this_is_shore_kits'
PACKAGE_BUGREPORT=''
PACKAGE_NAME='THIS_IS_SHORE_KITS'
PACKAGE_STRING='THIS_IS_SHORE_KITS 2.1'
PACKAGE_TARNAME='this_is_shore_kits'
PACKAGE_URL=''
PACKAGE_VERSION='2.1'
PATH_SEPARATOR=':'
RANLIB='ranlib'
READLINE_HOME='/usr'
SET_MAKE=''
SHELL='/bin/bash'
SHORE_HOME='../shore-mt/'
SPARC_MACHINE_FALSE=''
SPARC_MACHINE_TRUE='#'
STRIP=''
USE_BT_FALSE=''
USE_BT_TRUE='#'
USE_DORA_FALSE=''
USE_DORA_TRUE='#'
USE_FLUSHER_FALSE=''
USE_FLUSHER_TRUE='#'
USE_HACK_FALSE=''
USE_HACK_TRUE='#'
USE_QPIPE_FALSE=''
USE_QPIPE_TRUE='#'
USE_SHORE_6_FALSE='#'
USE_SHORE_6_TRUE=''
USE_SIMICS_FALSE=''
USE_SIMICS_TRUE='#'
USE_VTUNE_FALSE=''
USE_VTUNE_TRUE='#'
VERSION='2.1'
ac_ct_CXX='g++'
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCXX_FALSE='#'
am__fastdepCXX_TRUE=''
am__include='include'
am__isrc=''
am__leading_dot='.'
am__nodep='_no'
am__quote=''
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
bindir='${exec_prefix}/bin'
build='x86_64-pc-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='pc'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-pc-linux-gnu'
host_alias=''
host_cpu='x86_64'
host_os='linux-gnu'
host_vendor='pc'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /home/vishalr/Desktop/Tailbench/tailbench/shore/shore-kits/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target='x86_64-pc-linux-gnu'
target_alias=''
target_cpu='x86_64'
target_os='linux-gnu'
target_vendor='pc'

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "THIS_IS_SHORE_KITS"
#define PACKAGE_TARNAME "this_is_shore_kits"
#define PACKAGE_VERSION "2.1"
#define PACKAGE_STRING "THIS_IS_SHORE_KITS 2.1"
#define PACKAGE_BUGREPORT ""
#define PACKAGE_URL ""
#define PACKAGE "this_is_shore_kits"
#define VERSION "2.1"
#define CFG_SHORE_6 1
#define CFG_CACHES 1

configure: exit 0
